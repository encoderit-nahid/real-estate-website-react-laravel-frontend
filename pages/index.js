import Navbar from "../src/component/shared/Navbar/Navbar";
import Footer from "../src/component/shared/Footer/Footer";
import shapeIcon from "../public/Images/eclipseShape.png";
import Head from "next/head";
import dynamic from "next/dynamic";
import {
  Box,
  Grid,
  Typography,
  Container,
  ImageList,
  ImageListItem,
  Skeleton,
} from "@mui/material";
import FulfillDream from "../src/component/home/fullfill/FulfillDream";
import SideContent from "../src/component/home/FullfillSideContent/SideContent";
import SellSideContent from "../src/component/home/wantToSellSideContent/SellSideContent";
import mobileGray from "../public/Images/mobileGray.png";
import mobileBlue from "../public/Images/mobileBlue.png";
import WantSellSvgBackground from "../src/component/svg/WantSellSvgBackground";
import { renderToStaticMarkup } from "react-dom/server";
import WantToSell from "../src/component/home/wantToSell/WantToSell";
import BrokerRegisterContent from "../src/component/home/whoIsBroker/brokerRegister/BrokerRegisterContent";
import BrokerImageContent from "../src/component/home/whoIsBroker/brokerContent/BrokerImageContent";
import BestDealSvgBackground from "../src/component/svg/BestDealSvgBackground";
import HouseCard from "../src/component/reuseable/HouseCard/HouseCard";
import MobileSideContent from "../src/component/home/FullfillSideContent/MobileSideContent";
import BrokerImageContentMobile from "../src/component/home/whoIsBroker/brokerContent/BrokerImageContentMobile";
import whoBroker from "../public/Images/who_broker.png";
import backgroundImage from "../public/Images/background.png";
import whoBrokerMobile from "../public/Images/who_broker_mobile.png";
import technologyImage from "../public/Images/technology.png";
import clientsImage from "../public/Images/clients.png";
import earnImage from "../public/Images/earn.png";
import { useSession, signIn, signOut } from "next-auth/react";
import { _baseURL } from "../consts";
import { bestDealsApi } from "../src/api";
import { useEffect, useState } from "react";
import Link from "next/link";
import Slider from "react-slick";
import GetCookie from "@/hooks/getCookie";
import Cookies from "js-cookie";
import SetCookie from "@/hooks/setCookie";
import en from "locales/en";
import pt from "locales/pt";
// import 'slick-carousel/slick/slick.css'
// import 'slick-carousel/slick/slick-theme.css'

export default function App({
  loginOpen,
  setLoginOpen,
  handleLoginOpen,
  handleLoginClose,
  language,
  data,
}) {
  const svgString = encodeURIComponent(
    renderToStaticMarkup(<WantSellSvgBackground />)
  );
  const svgDealsString = encodeURIComponent(
    renderToStaticMarkup(<BestDealSvgBackground />)
  );
  const [isLoading, setIsLoading] = useState(true);
  const { data: session } = useSession();

  const [myValue, setMyValue] = useState(language || "pt");

  useEffect(() => {
    SetCookie("language", myValue);
  }, [myValue]);

  const t = myValue === "en" ? en : pt;

  const brokerData = [
    {
      name: t["High technology and low bureaucracy"],
      info: t[
        "Digital and simplified sales process, which provides agility and transparency, allowing you to focus on your customer"
      ],
      imageSrc: technologyImage,
    },
    {
      name: t["Clients and full assistance"],
      info: t[
        "Simple ad system combined with complete assistance in the end-to-end buying and selling process. From announcement to public deed"
      ],
      imageSrc: clientsImage,
    },
    {
      name: t["earn more"],
      info: t[
        "We offer the best technologies, the most complete and agile advice on the market and the highest commission, the broker gets up to 70% of the total commission"
      ],
      imageSrc: earnImage,
    },
  ];

  useEffect(() => {
    setIsLoading(false);
  }, [data]);

  const settings = {
    infinite: false,
    speed: 500,
    slidesToShow: 3,
    slidesToScroll: 1,
    initialSlide: 0,
    responsive: [
      {
        breakpoint: 768,
        settings: {
          arrows: false,
          slidesToShow: 3,
        },
      },
      {
        breakpoint: 480,
        settings: {
          arrows: false,
          slidesToShow: 1,
        },
      },
    ],
  };

  return (
    <div>
      <Head>
        <title>Lokkan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/negotiate.png" />
      </Head>

      <main className="section">
        {/* <Grid
          container
          spacing={2}
          sx={{ paddingRight: { xs: 5, sm: 5, md: 10, xl: 10, lg: 10 } }}
        >
          <Grid item xs={12} sm={12} md={12} xl={6} lg={6}>
            <FulfillDream languageName={myValue.toString()} />
          </Grid>
          <Grid
            item
            xl={6}
            lg={6}
            md={12}
            sx={{
              display: {
                xs: "none",
                sm: "none",
                xl: "inline",
                lg: "inline",
                md: "inline",
              },
            }}
          >
            <SideContent />
          </Grid>
          <Grid
            item
            xs={12}
            sm={12}
            sx={{
              marginLeft: { xs: 2, sm: 2, md: 5, lg: 5, xl: 5 },

              display: {
                xl: "none",
                lg: "none",
                md: "none",
                xs: "inline",
                sm: "inline",
              },
            }}
          >
            <MobileSideContent />
          </Grid>
        </Grid> */}
        <Box
          sx={{
            backgroundImage: {
              xs: `url(${mobileGray.src})`,
              sm: `url(${mobileGray.src})`,
              md: `url(${backgroundImage.src})`,
              lg: `url(${backgroundImage.src})`,
              xl: `url(${backgroundImage.src})`,
            },
            backgroundRepeat: "no-repeat",
            backgroundSize: "100% 100%", // Set backgroundSize to cover the entire area
            minHeight: "100vh", // Ensure the box covers at least the viewport height
            // display: "flex",
            // flexDirection: "column",
            // justifyContent: "center", // Center content vertically
            // alignItems: "center", // Center content horizontally
          }}
        >
          <Navbar
            shape={true}
            loginOpen={loginOpen}
            setLoginOpen={setLoginOpen}
            handleLoginClose={handleLoginClose}
            handleLoginOpen={handleLoginOpen}
            session={session}
            language={true}
            languageName={language}
            setMyValue={setMyValue}
            myValue={myValue}
          />

          <Box>
            <FulfillDream />
          </Box>
        </Box>
        <Footer />
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  const base_url = process.env.NEXT_PUBLIC_API_URL;
  const res = await fetch(`${base_url}/api/property/best-deals`);
  const data = await res.json();

  const cookies = context.req.cookies["language"] || "pt";

  return {
    props: { data: data, language: cookies }, // will be passed to the page component as props
  };
}
