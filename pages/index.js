import dynamic from "next/dynamic";
const Navbar = dynamic(() => import("@/component/shared/Navbar/Navbar"), {
  ssr: false,
});
const Footer = dynamic(() => import("@/component/shared/Footer/Footer"), {
  ssr: false,
});
import Head from "next/head";
import { Box, Tooltip } from "@mui/material";
const FulfillDream = dynamic(() =>
  import("@/component/home/fullfill/FulfillDream")
);
import backgroundImage from "../public/Images/background.png";
import { useSession } from "next-auth/react";
import { _baseURL } from "../consts";
import { useEffect, useState } from "react";
import SetCookie from "@/hooks/setCookie";
import en from "locales/en";
import pt from "locales/pt";
import { useRouter } from "next/router";
import AuthorizationMessage from "@/component/Dailog/AuthorizationMessage";
import Image from "next/image";
const BaseModal = dynamic(() =>
  import("@/component/reuseable/baseModal/BaseModal")
);
const KnowMoreContent = dynamic(() =>
  import("@/component/home/knowMoreContent/KnowMoreContent")
);

export default function App({
  loginOpen,
  setLoginOpen,
  handleLoginOpen,
  handleLoginClose,
  language,
}) {
  const { data: session } = useSession();
  const [imageLoaded, setImageLoaded] = useState(false);

  const [myValue, setMyValue] = useState(language || "pt");

  useEffect(() => {
    SetCookie("language", myValue);
  }, [myValue]);

  const t = myValue === "en" ? en : pt;

  const [knowMoreModal, setKnowMoreModal] = useState(false);
  const handleKnowMoreModalOpen = () => {
    setKnowMoreModal(true);
  };
  const handleKnowMoreModalClose = () => {
    setKnowMoreModal(false);
  };

  const router = useRouter();
  const {type } = router.query;
  const [dialogOpen, setDialogOpen] = useState(false);

  useEffect(() => {
    if (type) {
      setDialogOpen(true);
    }
  }, [type]);

  const handleDialogClose = () => {
    setDialogOpen(false);
    // Remove query parameters
    router.replace(router.pathname, undefined, { shallow: true });
  };

  const handleImageLoad = () => setImageLoaded(true);

  return (
    <div>
      <Head>
        <title>Lokkan - A imobili√°ria digital</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/negotiate.png" />
      </Head>

      <main className="section">
        <Box
         sx={{
          position: "relative",
          backgroundColor: imageLoaded ? 'transparent' : 'black',
          minHeight: "100vh",
          transition: 'background-color 0.5s ease-out',
          overflow: 'hidden',
        }}
        >
                <Image
            src={backgroundImage.src}
            alt="Background"
            layout="fill" // Fill the parent container
            objectFit="cover" // Ensure the image covers the container
            quality={100} // Optional: control image quality
            onLoad={handleImageLoad}
            style={{
              position: 'absolute',
              top: 0,
              left: 0,
              zIndex: -1, // Place the image behind other content
              opacity: imageLoaded ? 1 : 0, // Fade in the image
              transition: 'opacity 0.5s ease-out',
            }}
          />
          <Navbar
            shape={true}
            loginOpen={loginOpen}
            setLoginOpen={setLoginOpen}
            handleLoginClose={handleLoginClose}
            handleLoginOpen={handleLoginOpen}
            session={session}
            language={true}
            languageName={language}
            setMyValue={setMyValue}
            myValue={myValue}
          />

          <Box>
            <FulfillDream setKnowMoreModal={setKnowMoreModal} />
          </Box>
        </Box>
        <Footer />

        <BaseModal isShowing={knowMoreModal} isClose={handleKnowMoreModalClose}>
          <Tooltip title="Something">
            <>
              <KnowMoreContent
                handleClose={handleKnowMoreModalClose}
                languageName={myValue.toString()}
                href={{
                  pathname: "/buscar-imoveis",
                }}
              />
            </>
          </Tooltip>
        </BaseModal>
        <AuthorizationMessage dialogOpen={dialogOpen} handleDialogClose={handleDialogClose} type={type}/>
      </main>
    </div>
  );
}