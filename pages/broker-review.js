import {
  Alert,
  Box,
  Button,
  CircularProgress,
  Container,
  Grid,
  InputAdornment,
  Rating,
  TextField,
  Typography,
} from "@mui/material";
import Head from "next/head";
import registerImage from "../public/Images/register.png";
import Image from "next/image";
import React, { useState } from "react";
import en from "locales/en";
import pt from "locales/pt";
import { useRouter } from "next/router";
import { useBrokerReviewMutation } from "@/queries/useBrokerReviewMutation";
import toast from "react-hot-toast";

export default function BrokerReview({ languageName }) {
  const router = useRouter();
  const { query } = router;
  const t = languageName === "en" ? en : pt;
  const [value, setValue] = React.useState(0);
  const [comment, setComment] = useState("");
  console.log(value);

  const mutation = useBrokerReviewMutation();
  const [loading, setLoading] = useState(false);

  const handleSubmit = () => {
    setLoading(true);
    // Handle the submission logic here, such as sending the value to an API
    if (value < 1 || value === null) {
      toast.error("O campo de classificação é obrigatório");
    } else {
      const body = {
        user_id: query?.user_id,
        reviewer_id: query?.reviewer_id,
        rating: value,
        review: comment,
      };
      mutation.mutate(body, {
        onError(error) {
          setLoading(false);
          toast.error("Falha no envio da revisão");
        },
        onSuccess: async (data) => {
          setLoading(false);
          toast.success("Revisão enviada com sucesso");
        },
      });
    }
  };
  const handleSkip = () => {
    router.push("/");
  };

  return (
    <div>
      <Head>
        <title>Lokkan - A imobiliária digital</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/negotiate.png" />
      </Head>

      <main className="section">
        <Box sx={{ px: 5 }}>
          <Grid container spacing={1}>
            <Grid item xs={12} sm={12} md={12} lg={4} xl={4}>
              <Grid
                container
                direction="row"
                // justifyContent="center"
                // alignItems="center"
                sx={{ py: 4, height: "100vh" }}
              >
                <Container>
                  <Typography varinat="p" sx={{ fontSize: "30px" }}>
                    forneça uma classificação para o corretor
                  </Typography>
                  <Rating
                    name="simple-controlled"
                    value={value}
                    size="large"
                    sx={{ mt: 2 }}
                    onChange={(event, newValue) => {
                      setValue(newValue);
                    }}
                  />
                  <TextField
                    label="Seu feedback"
                    multiline
                    rows={4}
                    variant="outlined"
                    fullWidth
                    value={comment}
                    sx={{ mt: 2 }}
                    onChange={(e) => setComment(e.target.value)}
                  />
                  <div style={{ marginTop: "10px" }}>
                    <Button
                      disabled={loading}
                      variant="contained"
                      color="primary"
                      onClick={handleSubmit}
                      style={{ marginRight: "10px" }}
                    >
                      {loading && (
                        <CircularProgress size={22} color="inherit" />
                      )}
                      {!loading && "Enviar"}
                    </Button>
                    <Button
                      disabled={loading}
                      variant="outlined"
                      color="secondary"
                      onClick={handleSkip}
                    >
                      Pular
                    </Button>
                  </div>
                </Container>
              </Grid>
            </Grid>
            <Grid item xs={12} sm={12} md={12} lg={8} xl={8}>
              <Box>
                <Image src={registerImage} alt="register" />
              </Box>
            </Grid>
          </Grid>
        </Box>
      </main>
    </div>
  );
}
